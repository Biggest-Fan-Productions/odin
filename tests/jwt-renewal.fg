# Set up the database
odin.sql.file (module.path.join ../Schema/core/000-initial.blue.sql)
odin.sql.file (module.path.join ../Schema/core/002-add-merge-account.blue.sql)
odin.sql.file (module.path.join ../Schema/authn/001-initial.blue.sql)
odin.sql.file (module.path.join ../Schema/authn/002-fix-login.blue.sql)
odin.sql.file (module.path.join ../Schema/authn/003-alter-ledgers.blue.sql)
odin.sql.file (module.path.join ../Schema/app/002-initial.blue.sql)
odin.sql.file (module.path.join ../Schema/app/003-app-role.blue.sql)
odin.sql.file (module.path.join ../Schema/app/004-app-installation.blue.sql)
odin.sql.file (module.path.join ../Schema/app/005-alter-ledgers.blue.sql)
odin.sql.file (module.path.join ../Schema/app/006-merge-account-function.blue.sql)
# Register app01
sql.insert odin.identity {"id": "app01"}
sql.insert odin.app_ledger {
    "reference": "ref1",
    "app_id": "app01",
    "app_name": "MyApp",
    "token": "APP_TOKEN",
    "redirect_url": "http://example.com",
    "access_policy": "INVITE_ONLY",
    "data_sharing_policy": "ALL"
}



# Test cannot get data if user is not authorized
GET test/app-secure/renew-jwt  / 401
GET test/secure/renew-jwt / 401


# Get APP JWT
set app_jwt (odin.jwt.mint {"sub": "user01", "iss": "http://odin.felspar.com/app/app01"} <JWT_SECRET>app01)
set-path testserver.headers ["Authorization"] (cat "Bearer " (lookup app_jwt))
GET test/app-secure/renew-jwt / 200
POST test/app-secure/renew-jwt / {} 501


# Get non APP JWT
odin.user user02 user02 password1234
set jwt (odin.jwt.mint {"sub": "user02"} <JWT_SECRET>)
set-path testserver.headers ["Authorization"] (cat "Bearer " (lookup jwt))
GET test/secure/renew-jwt / 200
POST test/secure/renew-jwt / {} 501


# Should return error if not config renew JWT view under secure view
GET test/renew-jwt / 501
