# Set up the database
odin.sql.file (module.path.join ../Schema/core/000-initial.blue.sql)
odin.sql.file (module.path.join ../Schema/core/002-add-merge-account.blue.sql)
odin.sql.file (module.path.join ../Schema/authn/001-initial.blue.sql)
odin.sql.file (module.path.join ../Schema/authn/002-fix-login.blue.sql)
odin.sql.file (module.path.join ../Schema/authn/003-alter-ledgers.blue.sql)
odin.sql.file (module.path.join ../Schema/opts/full-name/001-initial.blue.sql)
odin.sql.file (module.path.join ../Schema/opts/full-name/003-alter-ledgers.blue.sql)
odin.sql.file (module.path.join ../Schema/opts/full-name/004-merge-account-function.blue.sql)
odin.sql.file (module.path.join ../Schema/opts/email/001-initial.blue.sql)
odin.sql.file (module.path.join ../Schema/opts/email/003-alter-ledgers.blue.sql)
odin.sql.file (module.path.join ../Schema/opts/email/004-merge-account-function.blue.sql)
odin.sql.file (module.path.join ../Schema/opts/google/001-initial.blue.sql)
odin.sql.file (module.path.join ../Schema/opts/google/003-alter-ledgers.blue.sql)
odin.sql.file (module.path.join ../Schema/opts/google/004-merge-account-function.blue.sql)
odin.sql.file (module.path.join ../Schema/opts/google/005-google-credentials-insert.blue.sql)
odin.sql.file (module.path.join ../Schema/app/002-initial.blue.sql)
odin.sql.file (module.path.join ../Schema/app/003-app-role.blue.sql)
odin.sql.file (module.path.join ../Schema/app/004-app-installation.blue.sql)
odin.sql.file (module.path.join ../Schema/app/005-alter-ledgers.blue.sql)
odin.sql.file (module.path.join ../Schema/app/006-merge-account-function.blue.sql)

setting odin "JWT secret" <JWT_SECRET>

## ## Register app
sql.insert odin.identity {"id": "open-app"}
sql.insert odin.app_ledger {
    "reference": "ref1",
    "app_id": "open-app",
    "app_name": "MyApp",
    "token": "APP_TOKEN",
    "redirect_url": "http://example.com",
    "access_policy": "OPEN",
    "data_sharing_policy": "ALL"
}

## The application counts as a user
GET odin/test/google/validate_login /count-users 200 {"count": 1}
GET odin/test/google/validate_login /count-google-users 200 {"count": 0}

## Set up a new installation
setting webserver views/test/app/installation {
            "view": "odin.app.installation",
            "configuration": {"expires": {"hours": 72}}
        }
setting webserver views/test/sec/installation {
        "view": "odin.app.secure",
        "configuration": {
            "secure": "test/app/installation",
            "unsecure": "fost.response.403"
        }
    }

## ## Registration of new user
set-path testserver.headers ["Authorization"] (cat "Bearer " (odin.jwt.mint {"sub": "open-app", "iss": "http://odin.felspar.com/app/open-app"} <JWT_SECRET>open-app))
set-path testserver.headers ["Authorization"] (cat "Bearer " (POST test/sec/installation / {"installation_id": "ins01"} 201))

setting webserver views/odin/test/sec/google/login/ok {
        "view": "odin.app.secure",
        "configuration": {
            "secure": {
                "view": "odin.app.google.login",
                "configuration": {
                    "expires": {"hours": 72},
                    "google-mock": "OK"
                }
            },
            "unsecure": "fost.response.403"
        }
    }

## The installation counts as an extra user
GET odin/test/google/validate_login /count-users 200 {"count": 2}
GET odin/test/google/validate_login /count-google-users 200 {"count": 0}

## Disallowed methods return a 405
GET odin/test/sec/google/login/ok / 405
PUT odin/test/sec/google/login/ok / {"installation_id": "ins01", "access_token": "user_1"} 405

## Need required fields
POST odin/test/sec/google/login/ok / {} 501

## Login with Google ID that has not been seen before
set-path testserver.headers ["Authorization"] (cat "Bearer " (POST odin/test/sec/google/login/ok / {"access_token": "user_1"} 200))
GET odin/test/google/validate_login /count-users 200 {"count": 2}
GET odin/test/google/validate_login /count-google-users 200 {"count": 1}

## Login again later on should be just fine
set-path testserver.headers ["Authorization"] (cat "Bearer " (POST odin/test/sec/google/login/ok / {"access_token": "user_1"} 200))
GET odin/test/google/validate_login /count-users 200 {"count": 2}
GET odin/test/google/validate_login /count-google-users 200 {"count": 1}
