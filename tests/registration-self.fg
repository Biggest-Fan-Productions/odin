# Set up the modules we need
odin.sql.file (module.path.join ../Schema/core/000-initial.blue.sql)
odin.sql.file (module.path.join ../Schema/authn/001-initial.blue.sql)


# For self registration we must be not logged in
GET odin /api/ 401 {"odin": {"user": "./user/:user-id/"}}
POST odin/register / {"username": "self_register_user", "password": "password1234"} 201
POST odin/login / {"username": "self_register_user", "password": "password1234"} 200


# Password is optional when register.
POST odin/register / {"username": "no_pwd"} 201
GET odin/secure/sql /user/no_pwd 200 {"user": {"id": "no_pwd", "expires": null}}

# Register with a username works the first time, but then returns an error
POST odin/register / {"username": "some-user", "password": "existing_pwd"} 201
POST odin/register / {"username": "some-user", "password": "new_pwd"} 501


# But for managed registration we must be logged in
odin.user test-user pw1234
odin.jwt.authorization test-user pw1234
GET odin /api/ 200 {"odin": {"user": "./user/:user-id/"}, "user": {"id": "test-user"}}


# Put the user
PUT odin /api/user/test-user {"password": "1234"} 200


## Enable opts/full-name module, then user can register with full-name along with username and password
odin.sql.file (module.path.join ../Schema/opts/full-name/001-initial.blue.sql)
POST odin/register / {"username": "user88", "password": "pwd88", "full_name": "John Doe"} 201
GET odin/secure/sql /user/user88 200 {"user": {"id": "user88", "expires": null, "full_name": "John Doe"}}


## Enable opts/email module, then user can register with email
odin.sql.file (module.path.join ../Schema/opts/email/001-initial.blue.sql)
POST odin/register / {"username": "user89", "password": "pwd88", "email": "admin@example.com"} 201
GET odin/secure/sql /user/user89 200 {"user": {"id": "user89", "expires": null, "full_name": null, "email": "admin@example.com"}}

## Should throw exception when user input invalid email
POST odin/register / {"username": "user91", "password": "pwd88", "email": "invalid_email"} 400
POST odin/register / {"username": "user91", "password": "pwd88", "email": ""} 400
